{
 "Description": "AWS Strands agent for monitoring spend and generating alerts",
 "Resources": {
  "SpendMonitorLogGroup367930B7": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/aws/lambda/spend-monitor-agent",
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/SpendMonitorLogGroup/Resource"
   }
  },
  "SpendAlertTopic7E2315E1": {
   "Type": "AWS::SNS::Topic",
   "Properties": {
    "DisplayName": "AWS Spend Monitor Alerts",
    "TopicName": "aws-spend-alerts"
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/SpendAlertTopic/Resource"
   }
  },
  "DeviceTokenTable5D54629B": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "deviceToken",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "deviceToken",
      "KeyType": "HASH"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "TableName": "spend-monitor-device-tokens"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceTokenTable/Resource"
   }
  },
  "SpendMonitorAgentServiceRoleD4CAE3C2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/SpendMonitorAgent/ServiceRole/Resource"
   }
  },
  "SpendMonitorAgentServiceRoleDefaultPolicyC1138BB7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ce:GetCostAndUsage",
        "ce:GetDimensionValues",
        "ce:GetReservationCoverage",
        "ce:GetReservationPurchaseRecommendation",
        "ce:GetReservationUtilization",
        "ce:GetUsageReport",
        "cloudwatch:PutMetricData"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "sns:Publish",
       "Effect": "Allow",
       "Resource": {
        "Ref": "SpendAlertTopic7E2315E1"
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DeviceTokenTable5D54629B",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SpendMonitorAgentServiceRoleDefaultPolicyC1138BB7",
    "Roles": [
     {
      "Ref": "SpendMonitorAgentServiceRoleD4CAE3C2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/SpendMonitorAgent/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "SpendMonitorAgentBEC3B4B9": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-710603110067-us-east-1",
     "S3Key": "f7a5e7dc690c88db59fa93587f4e2a0d3d7df40adf2d4cf217b59a1d9b277693.zip"
    },
    "Environment": {
     "Variables": {
      "SNS_TOPIC_ARN": {
       "Ref": "SpendAlertTopic7E2315E1"
      },
      "SPEND_THRESHOLD": "10",
      "CHECK_PERIOD_DAYS": "1",
      "RETRY_ATTEMPTS": "3",
      "MIN_SERVICE_COST": "1",
      "IOS_PLATFORM_APP_ARN": "",
      "IOS_BUNDLE_ID": "com.vinny.aws.spendmonitor",
      "APNS_SANDBOX": "true",
      "DEVICE_TOKEN_TABLE_NAME": {
       "Ref": "DeviceTokenTable5D54629B"
      }
     }
    },
    "Handler": "index.handler",
    "LoggingConfig": {
     "LogGroup": {
      "Ref": "SpendMonitorLogGroup367930B7"
     }
    },
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "SpendMonitorAgentServiceRoleD4CAE3C2",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 300
   },
   "DependsOn": [
    "SpendMonitorAgentServiceRoleDefaultPolicyC1138BB7",
    "SpendMonitorAgentServiceRoleD4CAE3C2"
   ],
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/SpendMonitorAgent/Resource",
    "aws:asset:path": "asset.f7a5e7dc690c88db59fa93587f4e2a0d3d7df40adf2d4cf217b59a1d9b277693",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "DeviceRegistrationFunctionServiceRole8BFAFB7E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationFunction/ServiceRole/Resource"
   }
  },
  "DeviceRegistrationFunctionServiceRoleDefaultPolicy5DC0FEA4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DeviceTokenTable5D54629B",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DeviceRegistrationFunctionServiceRoleDefaultPolicy5DC0FEA4",
    "Roles": [
     {
      "Ref": "DeviceRegistrationFunctionServiceRole8BFAFB7E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DeviceRegistrationFunction0D8ACE87": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-710603110067-us-east-1",
     "S3Key": "f7a5e7dc690c88db59fa93587f4e2a0d3d7df40adf2d4cf217b59a1d9b277693.zip"
    },
    "Environment": {
     "Variables": {
      "IOS_PLATFORM_APP_ARN": "",
      "DEVICE_TOKEN_TABLE_NAME": {
       "Ref": "DeviceTokenTable5D54629B"
      },
      "IOS_BUNDLE_ID": "com.vinny.aws.spendmonitor"
     }
    },
    "Handler": "device-registration-index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "DeviceRegistrationFunctionServiceRole8BFAFB7E",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "DeviceRegistrationFunctionServiceRoleDefaultPolicy5DC0FEA4",
    "DeviceRegistrationFunctionServiceRole8BFAFB7E"
   ],
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationFunction/Resource",
    "aws:asset:path": "asset.f7a5e7dc690c88db59fa93587f4e2a0d3d7df40adf2d4cf217b59a1d9b277693",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "DeviceRegistrationApi539944FE": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "API for managing iOS device registrations for spend monitor notifications",
    "Name": "iOS Device Registration API"
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApi/Resource"
   }
  },
  "DeviceRegistrationApiDeployment2FDA60FAb2da9b50a297aee21fa01cf2dcdb8c0d": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "API for managing iOS device registrations for spend monitor notifications",
    "RestApiId": {
     "Ref": "DeviceRegistrationApi539944FE"
    }
   },
   "DependsOn": [
    "DeviceRegistrationApidevicesdeviceTokenDELETEE8934480",
    "DeviceRegistrationApidevicesdeviceTokenOPTIONS0945A247",
    "DeviceRegistrationApidevicesdeviceTokenBE9D1A74",
    "DeviceRegistrationApidevicesGET3A2B509F",
    "DeviceRegistrationApidevicesOPTIONS10970C57",
    "DeviceRegistrationApidevicesPOSTACE6CAFF",
    "DeviceRegistrationApidevicesPUT87E1AF2A",
    "DeviceRegistrationApidevicesFCBC9A73",
    "DeviceRegistrationApiOPTIONSBFB5ECE0",
    "DeviceRegistrationModelCFD74879",
    "DeviceRegistrationValidator03E5AB79"
   ],
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApi/Deployment/Resource",
    "aws:cdk:do-not-refactor": true
   }
  },
  "DeviceRegistrationApiDeploymentStagev1185A1A12": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "DeviceRegistrationApiDeployment2FDA60FAb2da9b50a297aee21fa01cf2dcdb8c0d"
    },
    "MethodSettings": [
     {
      "DataTraceEnabled": true,
      "HttpMethod": "*",
      "LoggingLevel": "INFO",
      "MetricsEnabled": true,
      "ResourcePath": "/*"
     }
    ],
    "RestApiId": {
     "Ref": "DeviceRegistrationApi539944FE"
    },
    "StageName": "v1"
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApi/DeploymentStage.v1/Resource"
   }
  },
  "DeviceRegistrationApiOPTIONSBFB5ECE0": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "DeviceRegistrationApi539944FE",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "DeviceRegistrationApi539944FE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApi/Default/OPTIONS/Resource"
   }
  },
  "DeviceRegistrationApidevicesFCBC9A73": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "DeviceRegistrationApi539944FE",
      "RootResourceId"
     ]
    },
    "PathPart": "devices",
    "RestApiId": {
     "Ref": "DeviceRegistrationApi539944FE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApi/Default/devices/Resource"
   }
  },
  "DeviceRegistrationApidevicesOPTIONS10970C57": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "DeviceRegistrationApidevicesFCBC9A73"
    },
    "RestApiId": {
     "Ref": "DeviceRegistrationApi539944FE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApi/Default/devices/OPTIONS/Resource"
   }
  },
  "DeviceRegistrationApidevicesPOSTApiPermissionSpendMonitorStackDeviceRegistrationApi4336D341POSTdevicesD6B805CD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeviceRegistrationFunction0D8ACE87",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:710603110067:",
       {
        "Ref": "DeviceRegistrationApi539944FE"
       },
       "/",
       {
        "Ref": "DeviceRegistrationApiDeploymentStagev1185A1A12"
       },
       "/POST/devices"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApi/Default/devices/POST/ApiPermission.SpendMonitorStackDeviceRegistrationApi4336D341.POST..devices"
   }
  },
  "DeviceRegistrationApidevicesPOSTApiPermissionTestSpendMonitorStackDeviceRegistrationApi4336D341POSTdevices867D87C1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeviceRegistrationFunction0D8ACE87",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:710603110067:",
       {
        "Ref": "DeviceRegistrationApi539944FE"
       },
       "/test-invoke-stage/POST/devices"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApi/Default/devices/POST/ApiPermission.Test.SpendMonitorStackDeviceRegistrationApi4336D341.POST..devices"
   }
  },
  "DeviceRegistrationApidevicesPOSTACE6CAFF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "RequestTemplates": {
      "application/json": "{ \"statusCode\": \"200\" }"
     },
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DeviceRegistrationFunction0D8ACE87",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "RequestModels": {
     "application/json": {
      "Ref": "DeviceRegistrationModelCFD74879"
     }
    },
    "RequestValidatorId": {
     "Ref": "DeviceRegistrationValidator03E5AB79"
    },
    "ResourceId": {
     "Ref": "DeviceRegistrationApidevicesFCBC9A73"
    },
    "RestApiId": {
     "Ref": "DeviceRegistrationApi539944FE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApi/Default/devices/POST/Resource"
   }
  },
  "DeviceRegistrationApidevicesPUTApiPermissionSpendMonitorStackDeviceRegistrationApi4336D341PUTdevices0730E9A1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeviceRegistrationFunction0D8ACE87",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:710603110067:",
       {
        "Ref": "DeviceRegistrationApi539944FE"
       },
       "/",
       {
        "Ref": "DeviceRegistrationApiDeploymentStagev1185A1A12"
       },
       "/PUT/devices"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApi/Default/devices/PUT/ApiPermission.SpendMonitorStackDeviceRegistrationApi4336D341.PUT..devices"
   }
  },
  "DeviceRegistrationApidevicesPUTApiPermissionTestSpendMonitorStackDeviceRegistrationApi4336D341PUTdevices4D56B4BE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeviceRegistrationFunction0D8ACE87",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:710603110067:",
       {
        "Ref": "DeviceRegistrationApi539944FE"
       },
       "/test-invoke-stage/PUT/devices"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApi/Default/devices/PUT/ApiPermission.Test.SpendMonitorStackDeviceRegistrationApi4336D341.PUT..devices"
   }
  },
  "DeviceRegistrationApidevicesPUT87E1AF2A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "HttpMethod": "PUT",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "RequestTemplates": {
      "application/json": "{ \"statusCode\": \"200\" }"
     },
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DeviceRegistrationFunction0D8ACE87",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "DeviceRegistrationApidevicesFCBC9A73"
    },
    "RestApiId": {
     "Ref": "DeviceRegistrationApi539944FE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApi/Default/devices/PUT/Resource"
   }
  },
  "DeviceRegistrationApidevicesGETApiPermissionSpendMonitorStackDeviceRegistrationApi4336D341GETdevices7D11635B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeviceRegistrationFunction0D8ACE87",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:710603110067:",
       {
        "Ref": "DeviceRegistrationApi539944FE"
       },
       "/",
       {
        "Ref": "DeviceRegistrationApiDeploymentStagev1185A1A12"
       },
       "/GET/devices"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApi/Default/devices/GET/ApiPermission.SpendMonitorStackDeviceRegistrationApi4336D341.GET..devices"
   }
  },
  "DeviceRegistrationApidevicesGETApiPermissionTestSpendMonitorStackDeviceRegistrationApi4336D341GETdevices08694595": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeviceRegistrationFunction0D8ACE87",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:710603110067:",
       {
        "Ref": "DeviceRegistrationApi539944FE"
       },
       "/test-invoke-stage/GET/devices"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApi/Default/devices/GET/ApiPermission.Test.SpendMonitorStackDeviceRegistrationApi4336D341.GET..devices"
   }
  },
  "DeviceRegistrationApidevicesGET3A2B509F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "RequestTemplates": {
      "application/json": "{ \"statusCode\": \"200\" }"
     },
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DeviceRegistrationFunction0D8ACE87",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "RequestParameters": {
     "method.request.querystring.userId": true,
     "method.request.querystring.limit": false,
     "method.request.querystring.nextToken": false
    },
    "ResourceId": {
     "Ref": "DeviceRegistrationApidevicesFCBC9A73"
    },
    "RestApiId": {
     "Ref": "DeviceRegistrationApi539944FE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApi/Default/devices/GET/Resource"
   }
  },
  "DeviceRegistrationApidevicesdeviceTokenBE9D1A74": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "DeviceRegistrationApidevicesFCBC9A73"
    },
    "PathPart": "{deviceToken}",
    "RestApiId": {
     "Ref": "DeviceRegistrationApi539944FE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApi/Default/devices/{deviceToken}/Resource"
   }
  },
  "DeviceRegistrationApidevicesdeviceTokenOPTIONS0945A247": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "DeviceRegistrationApidevicesdeviceTokenBE9D1A74"
    },
    "RestApiId": {
     "Ref": "DeviceRegistrationApi539944FE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApi/Default/devices/{deviceToken}/OPTIONS/Resource"
   }
  },
  "DeviceRegistrationApidevicesdeviceTokenDELETEApiPermissionSpendMonitorStackDeviceRegistrationApi4336D341DELETEdevicesdeviceToken464BDB95": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeviceRegistrationFunction0D8ACE87",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:710603110067:",
       {
        "Ref": "DeviceRegistrationApi539944FE"
       },
       "/",
       {
        "Ref": "DeviceRegistrationApiDeploymentStagev1185A1A12"
       },
       "/DELETE/devices/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApi/Default/devices/{deviceToken}/DELETE/ApiPermission.SpendMonitorStackDeviceRegistrationApi4336D341.DELETE..devices.{deviceToken}"
   }
  },
  "DeviceRegistrationApidevicesdeviceTokenDELETEApiPermissionTestSpendMonitorStackDeviceRegistrationApi4336D341DELETEdevicesdeviceToken293C2C42": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeviceRegistrationFunction0D8ACE87",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:710603110067:",
       {
        "Ref": "DeviceRegistrationApi539944FE"
       },
       "/test-invoke-stage/DELETE/devices/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApi/Default/devices/{deviceToken}/DELETE/ApiPermission.Test.SpendMonitorStackDeviceRegistrationApi4336D341.DELETE..devices.{deviceToken}"
   }
  },
  "DeviceRegistrationApidevicesdeviceTokenDELETEE8934480": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "RequestTemplates": {
      "application/json": "{ \"statusCode\": \"200\" }"
     },
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DeviceRegistrationFunction0D8ACE87",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "RequestParameters": {
     "method.request.path.deviceToken": true
    },
    "ResourceId": {
     "Ref": "DeviceRegistrationApidevicesdeviceTokenBE9D1A74"
    },
    "RestApiId": {
     "Ref": "DeviceRegistrationApi539944FE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApi/Default/devices/{deviceToken}/DELETE/Resource"
   }
  },
  "DeviceRegistrationValidator03E5AB79": {
   "Type": "AWS::ApiGateway::RequestValidator",
   "Properties": {
    "Name": "device-registration-validator",
    "RestApiId": {
     "Ref": "DeviceRegistrationApi539944FE"
    },
    "ValidateRequestBody": true,
    "ValidateRequestParameters": false
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationValidator/Resource"
   }
  },
  "DeviceRegistrationModelCFD74879": {
   "Type": "AWS::ApiGateway::Model",
   "Properties": {
    "ContentType": "application/json",
    "Name": "DeviceRegistrationRequest",
    "RestApiId": {
     "Ref": "DeviceRegistrationApi539944FE"
    },
    "Schema": {
     "type": "object",
     "properties": {
      "deviceToken": {
       "type": "string",
       "pattern": "^[0-9a-fA-F]{64}$"
      },
      "userId": {
       "type": "string"
      },
      "bundleId": {
       "type": "string"
      }
     },
     "required": [
      "deviceToken"
     ],
     "$schema": "http://json-schema.org/draft-04/schema#"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationModel/Resource"
   }
  },
  "DeviceRegistrationApiKeyE8DE2337": {
   "Type": "AWS::ApiGateway::ApiKey",
   "Properties": {
    "Description": "API key for iOS device registration endpoints",
    "Enabled": true,
    "Name": "spend-monitor-device-registration-key"
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationApiKey/Resource"
   }
  },
  "DeviceRegistrationUsagePlanE5195C26": {
   "Type": "AWS::ApiGateway::UsagePlan",
   "Properties": {
    "ApiStages": [
     {
      "ApiId": {
       "Ref": "DeviceRegistrationApi539944FE"
      },
      "Stage": {
       "Ref": "DeviceRegistrationApiDeploymentStagev1185A1A12"
      },
      "Throttle": {}
     }
    ],
    "Description": "Usage plan for device registration API",
    "Quota": {
     "Limit": 10000,
     "Period": "DAY"
    },
    "Throttle": {
     "BurstLimit": 200,
     "RateLimit": 100
    },
    "UsagePlanName": "device-registration-usage-plan"
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationUsagePlan/Resource"
   }
  },
  "DeviceRegistrationUsagePlanUsagePlanKeyResourceSpendMonitorStackDeviceRegistrationApiKeyF035FA7E9C28B2C9": {
   "Type": "AWS::ApiGateway::UsagePlanKey",
   "Properties": {
    "KeyId": {
     "Ref": "DeviceRegistrationApiKeyE8DE2337"
    },
    "KeyType": "API_KEY",
    "UsagePlanId": {
     "Ref": "DeviceRegistrationUsagePlanE5195C26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/DeviceRegistrationUsagePlan/UsagePlanKeyResource:SpendMonitorStackDeviceRegistrationApiKeyF035FA7E"
   }
  },
  "SpendCheckSchedule7DC10937": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "Daily AWS spend check at 9:00 UTC",
    "ScheduleExpression": "cron(0 9 * * ? *)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "SpendMonitorAgentBEC3B4B9",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/SpendCheckSchedule/Resource"
   }
  },
  "SpendCheckScheduleAllowEventRuleSpendMonitorStackSpendMonitorAgent55373C3450249616": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SpendMonitorAgentBEC3B4B9",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "SpendCheckSchedule7DC10937",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/SpendCheckSchedule/AllowEventRuleSpendMonitorStackSpendMonitorAgent55373C34"
   }
  },
  "OperationalAlertTopicB3F33E16": {
   "Type": "AWS::SNS::Topic",
   "Properties": {
    "DisplayName": "Spend Monitor Operational Alerts",
    "TopicName": "spend-monitor-ops-alerts"
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/OperationalAlertTopic/Resource"
   }
  },
  "LambdaErrorAlarm646BFA4C": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmActions": [
     {
      "Ref": "OperationalAlertTopicB3F33E16"
     }
    ],
    "AlarmDescription": "Alarm for Lambda function errors in spend monitor",
    "AlarmName": "SpendMonitor-LambdaErrors",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "FunctionName",
      "Value": {
       "Ref": "SpendMonitorAgentBEC3B4B9"
      }
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "Errors",
    "Namespace": "AWS/Lambda",
    "Period": 300,
    "Statistic": "Sum",
    "Threshold": 1,
    "TreatMissingData": "notBreaching"
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/LambdaErrorAlarm/Resource"
   }
  },
  "LambdaDurationAlarmA8007F1F": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmActions": [
     {
      "Ref": "OperationalAlertTopicB3F33E16"
     }
    ],
    "AlarmDescription": "Alarm for Lambda function execution duration",
    "AlarmName": "SpendMonitor-LambdaDuration",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "FunctionName",
      "Value": {
       "Ref": "SpendMonitorAgentBEC3B4B9"
      }
     }
    ],
    "EvaluationPeriods": 2,
    "MetricName": "Duration",
    "Namespace": "AWS/Lambda",
    "Period": 300,
    "Statistic": "Average",
    "Threshold": 240000,
    "TreatMissingData": "notBreaching"
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/LambdaDurationAlarm/Resource"
   }
  },
  "ExecutionFailureAlarm65D8EF83": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmActions": [
     {
      "Ref": "OperationalAlertTopicB3F33E16"
     }
    ],
    "AlarmDescription": "Alarm for spend monitor execution failures",
    "AlarmName": "SpendMonitor-ExecutionFailures",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "Operation",
      "Value": "SpendMonitoring"
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "ErrorRate",
    "Namespace": "SpendMonitor/Agent",
    "Period": 300,
    "Statistic": "Sum",
    "Threshold": 1,
    "TreatMissingData": "notBreaching"
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/ExecutionFailureAlarm/Resource"
   }
  },
  "AlertDeliveryFailureAlarm03B2D208": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmActions": [
     {
      "Ref": "OperationalAlertTopicB3F33E16"
     }
    ],
    "AlarmDescription": "Alarm for alert delivery failures",
    "AlarmName": "SpendMonitor-AlertDeliveryFailures",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "Status",
      "Value": "Failure"
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "AlertDeliveryCount",
    "Namespace": "SpendMonitor/Agent",
    "Period": 300,
    "Statistic": "Sum",
    "Threshold": 1,
    "TreatMissingData": "notBreaching"
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/AlertDeliveryFailureAlarm/Resource"
   }
  },
  "iOSNotificationFailureAlarm46710358": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmActions": [
     {
      "Ref": "OperationalAlertTopicB3F33E16"
     }
    ],
    "AlarmDescription": "Alarm for iOS push notification delivery failures",
    "AlarmName": "SpendMonitor-iOSNotificationFailures",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "Status",
      "Value": "Failure"
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "iOSNotificationCount",
    "Namespace": "SpendMonitor/iOS",
    "Period": 300,
    "Statistic": "Sum",
    "Threshold": 1,
    "TreatMissingData": "notBreaching"
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/iOSNotificationFailureAlarm/Resource"
   }
  },
  "iOSInvalidTokenAlarm7EA0276C": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmActions": [
     {
      "Ref": "OperationalAlertTopicB3F33E16"
     }
    ],
    "AlarmDescription": "Alarm for high rate of invalid iOS device tokens",
    "AlarmName": "SpendMonitor-iOSInvalidTokens",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 1,
    "MetricName": "iOSInvalidTokens",
    "Namespace": "SpendMonitor/iOS",
    "Period": 900,
    "Statistic": "Sum",
    "Threshold": 5,
    "TreatMissingData": "notBreaching"
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/iOSInvalidTokenAlarm/Resource"
   }
  },
  "APNSCertificateHealthAlarm77241300": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmActions": [
     {
      "Ref": "OperationalAlertTopicB3F33E16"
     }
    ],
    "AlarmDescription": "Alarm for APNS certificate validation failures",
    "AlarmName": "SpendMonitor-APNSCertificateHealth",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "Operation",
      "Value": "APNSCertificateValidation"
     },
     {
      "Name": "Status",
      "Value": "Failure"
     }
    ],
    "EvaluationPeriods": 2,
    "MetricName": "ExecutionCount",
    "Namespace": "SpendMonitor/iOS",
    "Period": 300,
    "Statistic": "Sum",
    "Threshold": 1,
    "TreatMissingData": "notBreaching"
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/APNSCertificateHealthAlarm/Resource"
   }
  },
  "APNSCertificateExpirationWarningAlarm1485127D": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmActions": [
     {
      "Ref": "OperationalAlertTopicB3F33E16"
     }
    ],
    "AlarmDescription": "Warning alarm for APNS certificate expiring within 30 days",
    "AlarmName": "SpendMonitor-APNSCertificateExpirationWarning",
    "ComparisonOperator": "LessThanThreshold",
    "EvaluationPeriods": 1,
    "MetricName": "APNSCertificateDaysUntilExpiration",
    "Namespace": "SpendMonitor/iOS",
    "Period": 21600,
    "Statistic": "Minimum",
    "Threshold": 30,
    "TreatMissingData": "notBreaching"
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/APNSCertificateExpirationWarningAlarm/Resource"
   }
  },
  "APNSCertificateExpirationCriticalAlarm65E952C0": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmActions": [
     {
      "Ref": "OperationalAlertTopicB3F33E16"
     }
    ],
    "AlarmDescription": "Critical alarm for APNS certificate expiring within 7 days",
    "AlarmName": "SpendMonitor-APNSCertificateExpirationCritical",
    "ComparisonOperator": "LessThanThreshold",
    "EvaluationPeriods": 1,
    "MetricName": "APNSCertificateDaysUntilExpiration",
    "Namespace": "SpendMonitor/iOS",
    "Period": 3600,
    "Statistic": "Minimum",
    "Threshold": 7,
    "TreatMissingData": "notBreaching"
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/APNSCertificateExpirationCriticalAlarm/Resource"
   }
  },
  "iOSFallbackUsageAlarm7E7EAD88": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmActions": [
     {
      "Ref": "OperationalAlertTopicB3F33E16"
     }
    ],
    "AlarmDescription": "Alarm for high iOS notification fallback usage rate",
    "AlarmName": "SpendMonitor-iOSFallbackUsage",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 1,
    "MetricName": "iOSFallbackUsed",
    "Namespace": "SpendMonitor/iOS",
    "Period": 900,
    "Statistic": "Sum",
    "Threshold": 3,
    "TreatMissingData": "notBreaching"
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/iOSFallbackUsageAlarm/Resource"
   }
  },
  "iOSRegistrationFailureAlarmA4CF04D3": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmActions": [
     {
      "Ref": "OperationalAlertTopicB3F33E16"
     }
    ],
    "AlarmDescription": "Alarm for iOS device registration failures",
    "AlarmName": "SpendMonitor-iOSRegistrationFailures",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "Operation",
      "Value": "RegisterDevice"
     },
     {
      "Name": "Status",
      "Value": "Failure"
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "ExecutionCount",
    "Namespace": "SpendMonitor/iOS",
    "Period": 300,
    "Statistic": "Sum",
    "Threshold": 3,
    "TreatMissingData": "notBreaching"
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/iOSRegistrationFailureAlarm/Resource"
   }
  },
  "SpendMonitorDashboardF9F98187": {
   "Type": "AWS::CloudWatch::Dashboard",
   "Properties": {
    "DashboardBody": {
     "Fn::Join": [
      "",
      [
       "{\"widgets\":[{\"type\":\"metric\",\"width\":12,\"height\":6,\"x\":0,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Lambda Function Metrics\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"",
       {
        "Ref": "SpendMonitorAgentBEC3B4B9"
       },
       "\",{\"stat\":\"Sum\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"",
       {
        "Ref": "SpendMonitorAgentBEC3B4B9"
       },
       "\",{\"stat\":\"Sum\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"",
       {
        "Ref": "SpendMonitorAgentBEC3B4B9"
       },
       "\",{\"yAxis\":\"right\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":12,\"height\":6,\"x\":0,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Spend Monitoring Metrics\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"SpendMonitor/Agent\",\"CurrentSpend\",{\"period\":3600}],[\"SpendMonitor/Agent\",\"ProjectedMonthlySpend\",{\"period\":3600}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":12,\"height\":6,\"x\":0,\"y\":12,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Alert Delivery Metrics\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"SpendMonitor/Agent\",\"AlertDeliveryCount\",\"Status\",\"Success\",{\"stat\":\"Sum\"}],[\"SpendMonitor/Agent\",\"AlertDeliveryCount\",\"Status\",\"Failure\",{\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":12,\"height\":6,\"x\":0,\"y\":18,\"properties\":{\"view\":\"timeSeries\",\"title\":\"iOS Notification Metrics\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"SpendMonitor/iOS\",\"iOSNotificationCount\",\"Status\",\"Success\",{\"stat\":\"Sum\"}],[\"SpendMonitor/iOS\",\"iOSNotificationCount\",\"Status\",\"Failure\",{\"stat\":\"Sum\"}],[\"SpendMonitor/iOS\",\"iOSInvalidTokens\",{\"period\":900,\"stat\":\"Sum\",\"yAxis\":\"right\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":12,\"height\":6,\"x\":0,\"y\":24,\"properties\":{\"view\":\"timeSeries\",\"title\":\"iOS System Health Metrics\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"SpendMonitor/iOS\",\"ExecutionCount\",\"Operation\",\"APNSCertificateValidation\",\"Status\",\"Success\",{\"period\":3600,\"stat\":\"Sum\"}],[\"SpendMonitor/iOS\",\"ExecutionCount\",\"Operation\",\"APNSCertificateValidation\",\"Status\",\"Failure\",{\"period\":3600,\"stat\":\"Sum\"}],[\"SpendMonitor/iOS\",\"iOSDeviceCount\",{\"period\":3600,\"yAxis\":\"right\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":12,\"height\":6,\"x\":0,\"y\":30,\"properties\":{\"view\":\"timeSeries\",\"title\":\"APNS Certificate Health\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"SpendMonitor/iOS\",\"APNSCertificateDaysUntilExpiration\",{\"period\":21600,\"stat\":\"Minimum\"}],[\"SpendMonitor/iOS\",\"APNSCertificateValid\",{\"period\":3600}],[\"SpendMonitor/iOS\",\"APNSCertificateWarnings\",{\"period\":3600,\"stat\":\"Sum\",\"yAxis\":\"right\"}],[\"SpendMonitor/iOS\",\"APNSCertificateErrors\",{\"period\":3600,\"stat\":\"Sum\",\"yAxis\":\"right\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":12,\"height\":6,\"x\":0,\"y\":36,\"properties\":{\"view\":\"timeSeries\",\"title\":\"iOS Fallback and Error Recovery\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"SpendMonitor/iOS\",\"iOSFallbackUsed\",\"Status\",\"Success\",{\"period\":900,\"stat\":\"Sum\"}],[\"SpendMonitor/iOS\",\"iOSFallbackUsed\",\"Status\",\"Failure\",{\"period\":900,\"stat\":\"Sum\"}],[\"SpendMonitor/iOS\",\"iOSPayloadSize\",{\"period\":900,\"yAxis\":\"right\"}],[\"SpendMonitor/iOS\",\"iOSNotificationDeliveryTime\",{\"period\":900,\"yAxis\":\"right\"}]],\"yAxis\":{}}}]}"
      ]
     ]
    },
    "DashboardName": "SpendMonitorAgent"
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/SpendMonitorDashboard/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/22Q0U7kMAxFv4X3jBdm4AOGRewDO2JUWF6Rm5hOmDQudcKoivLvKGnZRSuefOzr3Mh3DeuLSzg/w5OstDmunG0hPQTUR4UneU6OO4H0m7tfI8dB/Xzxn5yVeIH0yIPVZV4hKzN57Nm0kB6xdVSVAlk57FuDkG6j18GyL9JX3tPYWxHLPiuLPaSG5/e17tlZPdW9SlnJ5hlFKAhsS1GygeuojxSuUUjhYDsMdMIJUkMStoOtXgve0OB46smHMv3SPQTs6q8zNCQcR03Vc0fhwKaIC32qi/PMDb1FkvCEzhoMPM7if7MdG3LVqcJ2sHdUr1voj2BHe4c1me+bO5qyonfyQSA1cckqlqi142hOGPQB0tbh2FfnCjcoh5ZxrGf8bXL+d0tNs1xvfVeW7mMYYsjKsyF4lR/v6zVcXMH52atYuxqjD7YnaOb6ATEDltdQAgAA"
   },
   "Metadata": {
    "aws:cdk:path": "SpendMonitorStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "DeviceRegistrationApiEndpoint0ABC7830": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "DeviceRegistrationApi539944FE"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "DeviceRegistrationApiDeploymentStagev1185A1A12"
      },
      "/"
     ]
    ]
   }
  },
  "SNSTopicArn": {
   "Description": "SNS Topic ARN for spend alerts",
   "Value": {
    "Ref": "SpendAlertTopic7E2315E1"
   }
  },
  "AgentFunctionName": {
   "Description": "Lambda function name for the spend monitor agent",
   "Value": {
    "Ref": "SpendMonitorAgentBEC3B4B9"
   }
  },
  "DeviceTokenTableName": {
   "Description": "DynamoDB table name for device token storage",
   "Value": {
    "Ref": "DeviceTokenTable5D54629B"
   }
  },
  "LogGroupName": {
   "Description": "CloudWatch Log Group for the spend monitor agent",
   "Value": {
    "Ref": "SpendMonitorLogGroup367930B7"
   }
  },
  "OperationalAlertTopicArn": {
   "Description": "SNS Topic ARN for operational alerts",
   "Value": {
    "Ref": "OperationalAlertTopicB3F33E16"
   }
  },
  "DashboardURL": {
   "Description": "CloudWatch Dashboard URL for monitoring",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://us-east-1.console.aws.amazon.com/cloudwatch/home?region=us-east-1#dashboards:name=",
      {
       "Ref": "SpendMonitorDashboardF9F98187"
      }
     ]
    ]
   }
  },
  "DeviceRegistrationApiUrl": {
   "Description": "Device Registration API Gateway URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "DeviceRegistrationApi539944FE"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "DeviceRegistrationApiDeploymentStagev1185A1A12"
      },
      "/"
     ]
    ]
   }
  },
  "DeviceRegistrationApiKeyId": {
   "Description": "API Key ID for device registration (retrieve value from AWS Console)",
   "Value": {
    "Ref": "DeviceRegistrationApiKeyE8DE2337"
   }
  },
  "DeviceRegistrationFunctionName": {
   "Description": "Lambda function name for device registration API",
   "Value": {
    "Ref": "DeviceRegistrationFunction0D8ACE87"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}